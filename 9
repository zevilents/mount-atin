-- Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

-- Window
local Window = Rayfield:CreateWindow({
   Name = "Rayfield Hub",
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   Theme = "Default",
   ToggleUIKeybind = "K",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   }
})

-- Tabs
local PlayerTab   = Window:CreateTab("Player", 4483362458)
local TeleportTab = Window:CreateTab("Teleport", 4483362458)
local ServerTab   = Window:CreateTab("Server", 4483362458)

----------------------------------------------------------------
-- UTIL
----------------------------------------------------------------
local function getHumanoid()
   local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
   return char:FindFirstChildOfClass("Humanoid")
end

local function getHRP()
   local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
   return char:FindFirstChild("HumanoidRootPart")
end

----------------------------------------------------------------
-- TAB: PLAYER  (urut: 1,2,4,5,6,7,3)
----------------------------------------------------------------

-- 1) WalkSpeed Slider
local WalkSlider = PlayerTab:CreateSlider({
   Name = "WalkSpeed",
   Range = {16, 500},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Callback = function(v)
      local hum = getHumanoid()
      if hum then hum.WalkSpeed = v end
   end
})

-- 2) JumpPower Slider
local JumpSlider = PlayerTab:CreateSlider({
   Name = "JumpPower",
   Range = {50, 500},
   Increment = 1,
   Suffix = "Power",
   CurrentValue = 50,
   Callback = function(v)
      local hum = getHumanoid()
      if hum then
         hum.UseJumpPower = true
         hum.JumpPower = v
      end
   end
})

-- 4) Fly Mode Toggle
local FlyEnabled, FlySpeed, FlyConn = false, 50, nil
PlayerTab:CreateToggle({
   Name = "Fly Mode",
   CurrentValue = false,
   Callback = function(state)
      FlyEnabled = state

      if FlyEnabled then
         if FlyConn then FlyConn:Disconnect() end
         FlyConn = RunService.RenderStepped:Connect(function()
            local hrp = getHRP()
            if not hrp then return end
            local dir = Vector3.zero
            local cam = workspace.CurrentCamera
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then dir += cam.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then dir -= cam.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then dir -= cam.CFrame.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then dir += cam.CFrame.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then dir += Vector3.new(0,1,0) end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then dir -= Vector3.new(0,1,0) end

            if dir.Magnitude > 0 then
               hrp.Velocity = dir.Unit * FlySpeed
            else
               hrp.Velocity = Vector3.zero
            end
         end)
      else
         if FlyConn then FlyConn:Disconnect() FlyConn = nil end
         local hrp = getHRP()
         if hrp then hrp.Velocity = Vector3.zero end
      end
   end
})

-- 5) Fly Speed Slider
PlayerTab:CreateSlider({
   Name = "Fly Speed",
   Range = {10, 300},
   Increment = 1,
   CurrentValue = 50,
   Suffix = "Speed",
   Callback = function(v) FlySpeed = v end
})

-- 6) Noclip Toggle
local Noclip, NoclipConn = false, nil
PlayerTab:CreateToggle({
   Name = "Noclip",
   CurrentValue = false,
   Callback = function(state)
      Noclip = state
      if Noclip and not NoclipConn then
         NoclipConn = RunService.Stepped:Connect(function()
            local char = LocalPlayer.Character
            if not char then return end
            for _, part in ipairs(char:GetDescendants()) do
               if part:IsA("BasePart") then part.CanCollide = false end
            end
         end)
      elseif not Noclip and NoclipConn then
         NoclipConn:Disconnect()
         NoclipConn = nil
      end
   end
})

-- 7) Reset Speed & Jump Button
PlayerTab:CreateButton({
   Name = "Reset Speed & Jump",
   Callback = function()
      local hum = getHumanoid()
      if hum then
         hum.WalkSpeed = 16
         hum.UseJumpPower = true
         hum.JumpPower = 50
      end
      WalkSlider:Set(16)
      JumpSlider:Set(50)
   end
})

-- 3) Infinite Jump Toggle
local InfiniteJump = false
PlayerTab:CreateToggle({
   Name = "Infinite Jump",
   CurrentValue = false,
   Callback = function(state) InfiniteJump = state end
})
UserInputService.JumpRequest:Connect(function()
   if InfiniteJump then
      local hum = getHumanoid()
      if hum then hum:ChangeState(Enum.HumanoidStateType.Jumping) end
   end
end)

----------------------------------------------------------------
-- TAB: TELEPORT  (fitur 8, 11)
----------------------------------------------------------------

-- 8) Teleport to Player (Dropdown + Button) -- FIXED for Rayfield
local function getPlayerNameList()
   local list = {}
   for _, p in ipairs(Players:GetPlayers()) do
      if p ~= LocalPlayer then table.insert(list, p.Name) end
   end
   if #list == 0 then table.insert(list, "No Players") end
   return list
end

local SelectedPlayer = nil
local initialPlayerOptions = getPlayerNameList()
local PlayerDropdown = TeleportTab:CreateDropdown({
   Name = "Select Player",
   Options = initialPlayerOptions,
   CurrentOption = {initialPlayerOptions[1]},
   MultipleOptions = false,
   Callback = function(opt)
      if typeof(opt) == "table" then opt = opt[1] end
      SelectedPlayer = (opt ~= "No Players") and opt or nil
   end
})

-- tombol teleport ke player
TeleportTab:CreateButton({
   Name = "Teleport to Player",
   Callback = function()
      if not SelectedPlayer then
         Rayfield:Notify("Teleport", "Pilih player dulu.", 4); return
      end
      local target = Players:FindFirstChild(SelectedPlayer)
      local hrp = getHRP()
      if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and hrp then
         hrp.CFrame = target.Character.HumanoidRootPart.CFrame + Vector3.new(0,5,0)
      else
         Rayfield:Notify("Teleport", "Gagal teleport: target/HRP tidak ditemukan.", 4)
      end
   end
})

-- auto refresh dropdown saat pemain berubah
local function refreshPlayerDropdown()
   local opts = getPlayerNameList()
   PlayerDropdown:Refresh(opts, true)
   -- set default
   PlayerDropdown:Set({opts[1]})
   SelectedPlayer = (opts[1] ~= "No Players") and opts[1] or nil
end
Players.PlayerAdded:Connect(refreshPlayerDropdown)
Players.PlayerRemoving:Connect(refreshPlayerDropdown)

-- 11) Teleport ke Pos (Dropdown + Button)
local PosList = {
   ["Pos 1"] = Vector3.new(5, 12, -404),
   ["Pos 2"] = Vector3.new(-184, 128, 408),
   ["Pos 3"] = Vector3.new(-166, 229, 652),
   ["Pos 4"] = Vector3.new(-38, 406, 616),
   ["Pos 5"] = Vector3.new(130, 651, 614),
   ["Pos 6"] = Vector3.new(-247, 666, 735),
   ["Pos 7"] = Vector3.new(-685, 641, 868),
   ["Pos 8"] = Vector3.new(-658, 688, 1458),
   ["Pos 9"] = Vector3.new(-507, 903, 1868),
   ["Pos 10"] = Vector3.new(59, 950, 2089),
   ["Pos 11"] = Vector3.new(52, 981, 2450),
   ["Pos 12"] = Vector3.new(72, 1097, 2456),
   ["Pos 13"] = Vector3.new(264, 1270, 2038),
   ["Pos 14"] = Vector3.new(-419, 1302, 2395),
   ["Pos 15"] = Vector3.new(-773, 1314, 2665),
   ["Pos 16"] = Vector3.new(-837, 1475, 2626),
   ["Pos 17"] = Vector3.new(-469, 1465, 2769),
   ["Pos 18"] = Vector3.new(-468, 1537, 2837),
   ["Pos 19"] = Vector3.new(-386, 1640, 2795),
   ["Pos 20"] = Vector3.new(-208, 1666, 2749),
   ["Pos 21"] = Vector3.new(-233, 1742, 2792),
   ["Pos 22"] = Vector3.new(-423, 1740, 2799),
   ["Pos 23"] = Vector3.new(-424, 1713, 3421),
   ["Pos 24"] = Vector3.new(71, 1719, 3428),
   ["Pos 25"] = Vector3.new(436, 1720, 3431),
   ["Pos 26"] = Vector3.new(625, 1799, 3433),
   ["Puncak"] = Vector3.new(781, 2163, 3921),
}

local orderedPosNames = {}
for i = 1, 26 do table.insert(orderedPosNames, ("Pos %d"):format(i)) end
table.insert(orderedPosNames, "Puncak")

local SelectedPosName = orderedPosNames[1]
local PosDropdown = TeleportTab:CreateDropdown({
   Name = "Select Pos",
   Options = orderedPosNames,
   CurrentOption = {orderedPosNames[1]},
   MultipleOptions = false,
   Callback = function(opt)
      if typeof(opt) == "table" then opt = opt[1] end
      SelectedPosName = opt
   end
})

TeleportTab:CreateButton({
   Name = "Teleport ke Pos",
   Callback = function()
      local targetVec = PosList[SelectedPosName]
      local hrp = getHRP()
      if targetVec and hrp then
         -- Sedikit offset +3 agar tidak nyangkut di permukaan
         hrp.CFrame = CFrame.new(targetVec + Vector3.new(0,3,0))
      else
         Rayfield:Notify("Teleport", "Pilih pos yang valid.", 4)
      end
   end
})

----------------------------------------------------------------
-- TAB: SERVER  (fitur 9, 10)
----------------------------------------------------------------

-- 9) Rejoin Server
ServerTab:CreateButton({
   Name = "Rejoin Server",
   Callback = function()
      TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, LocalPlayer)
   end
})

-- 10) Server Hop
ServerTab:CreateButton({
   Name = "Server Hop",
   Callback = function()
      local ok, res = pcall(function()
         local url = ("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100"):format(game.PlaceId)
         local body = game:HttpGet(url)
         return HttpService:JSONDecode(body)
      end)

      if not ok or not res or not res.data then
         Rayfield:Notify("Server Hop", "Gagal mengambil daftar server.", 5)
         return
      end

      local candidates = {}
      for _, s in ipairs(res.data) do
         if s.id ~= game.JobId and s.playing < s.maxPlayers then
            table.insert(candidates, s.id)
         end
      end

      if #candidates == 0 then
         Rayfield:Notify("Server Hop", "Tidak ada server lain yang tersedia.", 5)
         return
      end

      TeleportService:TeleportToPlaceInstance(game.PlaceId, candidates[math.random(1, #candidates)], LocalPlayer)
   end
})
