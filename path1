-- ====================================
-- FINAL NATURAL PATH RECORDER GUI
-- ====================================
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

local path = {}
local recording = false
local playback = false
local lastTime = tick()

-- ====================================
-- GUI
-- ====================================
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PathRecorder"
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 230, 0, 250)
frame.Position = UDim2.new(0, 50, 0, 100)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = frame

local layout = Instance.new("UIListLayout")
layout.Padding = UDim.new(0, 5)
layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
layout.VerticalAlignment = Enum.VerticalAlignment.Top
layout.Parent = frame

-- Fungsi buat tombol
local function createButton(text, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 200, 0, 35)
    button.Text = text
    button.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
    button.TextColor3 = Color3.new(1,1,1)
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 18
    button.Parent = frame

    local c = Instance.new("UICorner")
    c.CornerRadius = UDim.new(0, 8)
    c.Parent = button

    button.MouseButton1Click:Connect(callback)
end

-- ====================================
-- Record
-- ====================================
local function startRecord()
    path = {}
    recording = true
    lastTime = tick()
    print("‚ñ∂ Mulai record path...")
    task.spawn(function()
        while recording do
            local now = tick()
            local delayTime = now - lastTime
            lastTime = now

            table.insert(path, {
                Pos = hrp.Position,
                State = humanoid:GetState(),
                Delay = delayTime
            })

            task.wait(0.2) -- sampling rate (semakin kecil = makin detail)
        end
    end)
end

local function stopRecord()
    recording = false
    print("‚ñ† Stop record. Total titik:", #path)
end

-- ====================================
-- Playback
-- ====================================
local function playPath()
    if #path == 0 then
        warn("Belum ada path!")
        return
    end
    playback = true
    print("üö∂ Mulai playback path...")
    for _,step in ipairs(path) do
        if not playback then break end

        -- jeda sesuai record
        task.wait(step.Delay)

        -- kalau lompat
        if step.State == Enum.HumanoidStateType.Jumping then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end

        -- jalan ke posisi
        humanoid:MoveTo(step.Pos)
        humanoid.MoveToFinished:Wait()
    end
    print("‚úî Selesai playback path")
end

local function stopPlay()
    playback = false
    print("‚èπ Stop playback")
end

-- ====================================
-- Save / Load
-- ====================================
local function savePath()
    if not writefile then
        warn("Exploit kamu tidak support writefile!")
        return
    end
    local data = {}
    for _,step in ipairs(path) do
        table.insert(data, {
            Pos = {X=step.Pos.X, Y=step.Pos.Y, Z=step.Pos.Z},
            State = step.State.Value,
            Delay = step.Delay
        })
    end
    writefile("path.json", HttpService:JSONEncode(data))
    print("üíæ Path berhasil disimpan ke path.json")
end

local function loadPath()
    if not readfile or not isfile or not isfile("path.json") then
        warn("File path.json tidak ditemukan!")
        return
    end
    local data = HttpService:JSONDecode(readfile("path.json"))
    path = {}
    for _,step in ipairs(data) do
        table.insert(path, {
            Pos = Vector3.new(step.Pos.X, step.Pos.Y, step.Pos.Z),
            State = Enum.HumanoidStateType[step.State],
            Delay = step.Delay
        })
    end
    print("üìÇ Path berhasil dimuat! Total titik:", #path)
end

-- ====================================
-- Tombol GUI
-- ====================================
createButton("‚ñ∂ Start Record", startRecord)
createButton("‚ñ† Stop Record", stopRecord)
createButton("üö∂ Play Path", playPath)
createButton("‚èπ Stop Play", stopPlay)
createButton("üíæ Save Path", savePath)
createButton("üìÇ Load Path", loadPath)
