local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Player Hub",
   Icon = 0,
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   ShowText = "Rayfield",
   Theme = "Default",
   ToggleUIKeybind = "K",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})

-- 游릭 Buat Tab
local PlayerTab = Window:CreateTab("Player", 4483362458)

-- Variabel global
local SavedWalkSpeed = 16
local SavedJumpPower = 50
local InfiniteJumpEnabled = false
local FlyEnabled = false
local FlySpeed = 50
local NoclipEnabled = false
local NoclipConnection

-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- 游릭 WalkSpeed Slider
local WalkSpeedSlider = PlayerTab:CreateSlider({
   Name = "WalkSpeed",
   Range = {16, 200},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "WalkSpeedSlider",
   Callback = function(Value)
      SavedWalkSpeed = Value
      local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
      if humanoid then
         humanoid.WalkSpeed = Value
      end
   end,
})

-- 游릭 JumpPower Slider
local JumpPowerSlider = PlayerTab:CreateSlider({
   Name = "Jump Power / Height",
   Range = {50, 300},
   Increment = 5,
   Suffix = "Jump",
   CurrentValue = 50,
   Flag = "JumpPowerSlider",
   Callback = function(Value)
      SavedJumpPower = Value
      local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
      if humanoid then
         humanoid.UseJumpPower = true
         humanoid.JumpPower = Value
         humanoid.JumpHeight = Value / 7
      end
   end,
})

-- 游릭 Reset Button
local ResetButton = PlayerTab:CreateButton({
   Name = "Reset WalkSpeed & Jump",
   Callback = function()
      SavedWalkSpeed = 16
      SavedJumpPower = 50

      local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
      if humanoid then
         humanoid.WalkSpeed = SavedWalkSpeed
         humanoid.UseJumpPower = true
         humanoid.JumpPower = SavedJumpPower
         humanoid.JumpHeight = SavedJumpPower / 7
      end

      task.spawn(function()
         WalkSpeedSlider:Set(SavedWalkSpeed)
         JumpPowerSlider:Set(SavedJumpPower)
      end)
   end,
})

-- 游릭 Infinite Jump
local InfiniteJumpToggle = PlayerTab:CreateToggle({
   Name = "Infinite Jump",
   CurrentValue = false,
   Flag = "InfiniteJumpToggle",
   Callback = function(Value)
      InfiniteJumpEnabled = Value
   end,
})

UserInputService.JumpRequest:Connect(function()
   if InfiniteJumpEnabled then
      local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
      if humanoid then
         humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
      end
   end
end)

-- 游릭 Fly Speed Slider
local FlySpeedSlider = PlayerTab:CreateSlider({
   Name = "Fly Speed",
   Range = {10, 200},
   Increment = 5,
   Suffix = "Speed",
   CurrentValue = FlySpeed,
   Flag = "FlySpeedSlider",
   Callback = function(Value)
      FlySpeed = Value
   end,
})

-- 游릭 Fly Mode
local FlyToggle = PlayerTab:CreateToggle({
   Name = "Fly Mode",
   CurrentValue = false,
   Flag = "FlyToggle",
   Callback = function(Value)
      FlyEnabled = Value
      local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
      local hrp = char:WaitForChild("HumanoidRootPart")

      if FlyEnabled then
         local bv = Instance.new("BodyVelocity")
         bv.Name = "FlyVelocity"
         bv.MaxForce = Vector3.new(4000, 4000, 4000)
         bv.Velocity = Vector3.zero
         bv.Parent = hrp

         local rs
         rs = RunService.RenderStepped:Connect(function()
            if FlyEnabled and bv.Parent then
               local camCF = workspace.CurrentCamera.CFrame
               local moveDir = Vector3.zero

               if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                  moveDir = moveDir + camCF.LookVector
               end
               if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                  moveDir = moveDir - camCF.LookVector
               end
               if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                  moveDir = moveDir - camCF.RightVector
               end
               if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                  moveDir = moveDir + camCF.RightVector
               end
               if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                  moveDir = moveDir + Vector3.new(0,1,0)
               end
               if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                  moveDir = moveDir - Vector3.new(0,1,0)
               end

               bv.Velocity = moveDir * FlySpeed
            else
               if bv and bv.Parent then bv:Destroy() end
               if rs then rs:Disconnect() end
            end
         end)
      else
         local bv = hrp:FindFirstChild("FlyVelocity")
         if bv then bv:Destroy() end
      end
   end,
})

-- 游릭 Noclip
local NoclipToggle = PlayerTab:CreateToggle({
   Name = "Noclip",
   CurrentValue = false,
   Flag = "NoclipToggle",
   Callback = function(Value)
      NoclipEnabled = Value
      if NoclipEnabled then
         NoclipConnection = RunService.Stepped:Connect(function()
            if LocalPlayer.Character then
               for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                  if part:IsA("BasePart") then
                     part.CanCollide = false
                  end
               end
            end
         end)
      else
         if NoclipConnection then
            NoclipConnection:Disconnect()
            NoclipConnection = nil
         end
      end
   end,
})

-- 游릭 Teleport to Player
local function GetPlayerList()
   local names = {}
   for _, plr in pairs(Players:GetPlayers()) do
      if plr ~= LocalPlayer then
         table.insert(names, plr.Name)
      end
   end
   return names
end

local TPDropdown
TPDropdown = PlayerTab:CreateDropdown({
   Name = "Teleport to Player",
   Options = GetPlayerList(),
   CurrentOption = nil,
   MultipleOptions = false,
   Flag = "TPDropdown",
   Callback = function(Option)
      local target = Players:FindFirstChild(Option)
      local char = LocalPlayer.Character
      if target and target.Character and char then
         local hrp = char:FindFirstChild("HumanoidRootPart")
         local targetHrp = target.Character:FindFirstChild("HumanoidRootPart")
         if hrp and targetHrp then
            hrp.CFrame = targetHrp.CFrame + Vector3.new(0,2,0)
         end
      end
   end,
})

-- auto update list saat ada player join/leave
Players.PlayerAdded:Connect(function()
   TPDropdown:Refresh(GetPlayerList(), true)
end)
Players.PlayerRemoving:Connect(function()
   TPDropdown:Refresh(GetPlayerList(), true)
end)

-- 游릭 Auto Apply saat respawn
LocalPlayer.CharacterAdded:Connect(function(char)
   char:WaitForChild("Humanoid")
   task.wait(0.5)
   local humanoid = char:FindFirstChildOfClass("Humanoid")
   if humanoid then
      humanoid.WalkSpeed = SavedWalkSpeed
      humanoid.UseJumpPower = true
      humanoid.JumpPower = SavedJumpPower
      humanoid.JumpHeight = SavedJumpPower / 7
   end
end)
