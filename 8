local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local LocalPlayer = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

-- Buat Window
local Window = Rayfield:CreateWindow({
   Name = "Rayfield Hub",
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   Theme = "Default",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   }
})

-------------------------------------------------
-- Tab
-------------------------------------------------
local PlayerTab = Window:CreateTab("Player", 4483362458)
local TeleportTab = Window:CreateTab("Teleport", 4483362458)
local ServerTab = Window:CreateTab("Server", 4483362458)

-------------------------------------------------
-- PLAYER TAB FEATURES
-------------------------------------------------

-- WalkSpeed
local WalkSlider = PlayerTab:CreateSlider({
   Name = "WalkSpeed",
   Range = {16, 500},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Callback = function(Value)
      if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
         LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = Value
      end
   end,
})

-- JumpPower
local JumpSlider = PlayerTab:CreateSlider({
   Name = "JumpPower",
   Range = {50, 500},
   Increment = 1,
   Suffix = "Power",
   CurrentValue = 50,
   Callback = function(Value)
      if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
         LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpPower = Value
      end
   end,
})

-- Infinite Jump
local InfiniteJump = false
PlayerTab:CreateToggle({
   Name = "Infinite Jump",
   CurrentValue = false,
   Callback = function(Value)
      InfiniteJump = Value
   end,
})
UserInputService.JumpRequest:Connect(function()
   if InfiniteJump and LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
      LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
   end
end)

-- Fly
local FlyEnabled = false
local FlySpeed = 50
local BodyVelocity

PlayerTab:CreateToggle({
   Name = "Fly Mode",
   CurrentValue = false,
   Callback = function(Value)
      FlyEnabled = Value
      local Character = LocalPlayer.Character
      if not Character then return end
      local HRP = Character:WaitForChild("HumanoidRootPart")

      if FlyEnabled then
         BodyVelocity = Instance.new("BodyVelocity")
         BodyVelocity.Velocity = Vector3.zero
         BodyVelocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
         BodyVelocity.Parent = HRP

         RunService.RenderStepped:Connect(function()
            if FlyEnabled and BodyVelocity then
               local direction = Vector3.zero
               if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                  direction = direction + (workspace.CurrentCamera.CFrame.LookVector)
               end
               if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                  direction = direction - (workspace.CurrentCamera.CFrame.LookVector)
               end
               if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                  direction = direction - (workspace.CurrentCamera.CFrame.RightVector)
               end
               if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                  direction = direction + (workspace.CurrentCamera.CFrame.RightVector)
               end
               BodyVelocity.Velocity = direction * FlySpeed
            end
         end)
      else
         if BodyVelocity then BodyVelocity:Destroy() end
      end
   end,
})

-- Fly Speed
PlayerTab:CreateSlider({
   Name = "Fly Speed",
   Range = {10, 300},
   Increment = 1,
   CurrentValue = 50,
   Suffix = "Speed",
   Callback = function(Value)
      FlySpeed = Value
   end,
})

-- Noclip
local Noclip = false
PlayerTab:CreateToggle({
   Name = "Noclip",
   CurrentValue = false,
   Callback = function(Value)
      Noclip = Value
   end,
})
RunService.Stepped:Connect(function()
   if Noclip and LocalPlayer.Character then
      for _, v in pairs(LocalPlayer.Character:GetDescendants()) do
         if v:IsA("BasePart") then
            v.CanCollide = false
         end
      end
   end
end)

-- Reset Speed & Jump
PlayerTab:CreateButton({
   Name = "Reset Speed & Jump",
   Callback = function()
      if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
         LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = 16
         LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpPower = 50
         WalkSlider:Set(16)
         JumpSlider:Set(50)
      end
   end,
})

-------------------------------------------------
-- TELEPORT TAB FEATURES
-------------------------------------------------

-- Teleport to Player
local selectedPlayer = nil
local PlayerDropdown = TeleportTab:CreateDropdown({
   Name = "Select Player",
   Options = {},
   CurrentOption = "",
   Callback = function(option)
      selectedPlayer = option
   end,
})

for _, p in pairs(game.Players:GetPlayers()) do
   if p ~= LocalPlayer then
      PlayerDropdown:Add(p.Name)
   end
end

game.Players.PlayerAdded:Connect(function(p)
   if p ~= LocalPlayer then
      PlayerDropdown:Add(p.Name)
   end
end)
game.Players.PlayerRemoving:Connect(function(p)
   PlayerDropdown:Remove(p.Name)
end)

TeleportTab:CreateButton({
   Name = "Teleport to Player",
   Callback = function()
      if selectedPlayer and game.Players:FindFirstChild(selectedPlayer) then
         local target = game.Players[selectedPlayer]
         if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character:MoveTo(target.Character.HumanoidRootPart.Position)
         end
      end
   end,
})

-- Teleport ke Pos
local PosList = {
   ["Pos 1"] = Vector3.new(5, 12, -404),
   ["Pos 2"] = Vector3.new(-184, 128, 408),
   ["Pos 3"] = Vector3.new(-166, 229, 652),
   ["Pos 4"] = Vector3.new(-38, 406, 616),
   ["Pos 5"] = Vector3.new(130, 651, 614),
   ["Pos 6"] = Vector3.new(-247, 666, 735),
   ["Pos 7"] = Vector3.new(-685, 641, 868),
   ["Pos 8"] = Vector3.new(-658, 688, 1458),
   ["Pos 9"] = Vector3.new(-507, 903, 1868),
   ["Pos 10"] = Vector3.new(59, 950, 2089),
   ["Pos 11"] = Vector3.new(52, 981, 2450),
   ["Pos 12"] = Vector3.new(72, 1097, 2456),
   ["Pos 13"] = Vector3.new(264, 1270, 2038),
   ["Pos 14"] = Vector3.new(-419, 1302, 2395),
   ["Pos 15"] = Vector3.new(-773, 1314, 2665),
   ["Pos 16"] = Vector3.new(-837, 1475, 2626),
   ["Pos 17"] = Vector3.new(-469, 1465, 2769),
   ["Pos 18"] = Vector3.new(-468, 1537, 2837),
   ["Pos 19"] = Vector3.new(-386, 1640, 2795),
   ["Pos 20"] = Vector3.new(-208, 1666, 2749),
   ["Pos 21"] = Vector3.new(-233, 1742, 2792),
   ["Pos 22"] = Vector3.new(-423, 1740, 2799),
   ["Pos 23"] = Vector3.new(-424, 1713, 3421),
   ["Pos 24"] = Vector3.new(71, 1719, 3428),
   ["Pos 25"] = Vector3.new(436, 1720, 3431),
   ["Pos 26"] = Vector3.new(625, 1799, 3433),
   ["Puncak"] = Vector3.new(781, 2163, 3921),
}

local selectedPos = nil
local PosDropdown = TeleportTab:CreateDropdown({
   Name = "Select Pos",
   Options = {},
   CurrentOption = "",
   Callback = function(option)
      selectedPos = PosList[option]
   end,
})

for posName, _ in pairs(PosList) do
   PosDropdown:Add(posName)
end

TeleportTab:CreateButton({
   Name = "Teleport ke Pos",
   Callback = function()
      if selectedPos then
         LocalPlayer.Character:MoveTo(selectedPos)
      else
         Rayfield:Notify("Teleport", "Pilih pos dulu!", 5)
      end
   end,
})

-------------------------------------------------
-- SERVER TAB FEATURES
-------------------------------------------------

-- Rejoin Server
ServerTab:CreateButton({
   Name = "Rejoin Server",
   Callback = function()
      TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, LocalPlayer)
   end,
})

-- Server Hop
ServerTab:CreateButton({
   Name = "Server Hop",
   Callback = function()
      local servers = {}
      local req = game:HttpGet(
         string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100", game.PlaceId)
      )
      local data = HttpService:JSONDecode(req)
      if data and data.data then
         for _, v in pairs(data.data) do
            if v.id ~= game.JobId and v.playing < v.maxPlayers then
               table.insert(servers, v.id)
            end
         end
      end
      if #servers > 0 then
         TeleportService:TeleportToPlaceInstance(
            game.PlaceId,
            servers[math.random(1, #servers)],
            LocalPlayer
         )
      else
         Rayfield:Notify("Server Hop", "Tidak ada server lain ditemukan!", 5)
      end
   end,
})
