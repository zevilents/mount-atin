-- Final Rayfield Hub (improved fling)
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Services
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer

-- Window
local Window = Rayfield:CreateWindow({
   Name = "Rayfield Hub",
   LoadingTitle = "Rayfield Suite",
   LoadingSubtitle = "Improved Fling Build",
   Theme = "Default",
   ToggleUIKeybind = "K",
   ConfigurationSaving = { Enabled = true, FolderName = nil, FileName = "Big Hub" }
})

-- Tabs
local PlayerTab   = Window:CreateTab("Player", 4483362458)
local TeleportTab = Window:CreateTab("Teleport", 4483362458)
local ServerTab   = Window:CreateTab("Server", 4483362458)
local TrollTab    = Window:CreateTab("Troll", 4483362458)

-- Helpers
local function safeHumanoid()
   local c = LocalPlayer.Character
   if not c then return nil end
   return c:FindFirstChildOfClass("Humanoid")
end
local function safeHRP()
   local c = LocalPlayer.Character
   if not c then return nil end
   return c:FindFirstChild("HumanoidRootPart")
end
local function getPlayerNameList()
   local list = {}
   for _, p in ipairs(Players:GetPlayers()) do
      if p ~= LocalPlayer then table.insert(list, p.Name) end
   end
   if #list == 0 then table.insert(list, "No Players") end
   return list
end

----------------------------------------------------------------
-- PLAYER TAB (WalkSpeed, JumpPower, InfiniteJump, Fly, FlySpeed, Noclip, Reset)
----------------------------------------------------------------

local SavedWalk = 16
local SavedJump = 50

local WalkSlider = PlayerTab:CreateSlider({
   Name = "WalkSpeed",
   Range = {16, 500},
   Increment = 1,
   Suffix = "speed",
   CurrentValue = SavedWalk,
   Callback = function(v)
      SavedWalk = v
      local h = safeHumanoid()
      if h then pcall(function() h.WalkSpeed = v end) end
   end,
})

local JumpSlider = PlayerTab:CreateSlider({
   Name = "JumpPower",
   Range = {50, 500},
   Increment = 1,
   Suffix = "power",
   CurrentValue = SavedJump,
   Callback = function(v)
      SavedJump = v
      local h = safeHumanoid()
      if h then pcall(function() h.UseJumpPower = true; h.JumpPower = v; h.JumpHeight = v/7 end) end
   end,
})

local InfiniteJumpEnabled = false
PlayerTab:CreateToggle({
   Name = "Infinite Jump",
   CurrentValue = false,
   Callback = function(v) InfiniteJumpEnabled = v end
})
UserInputService.JumpRequest:Connect(function()
   if InfiniteJumpEnabled then
      local h = safeHumanoid()
      if h then pcall(function() h:ChangeState(Enum.HumanoidStateType.Jumping) end) end
   end
end)

-- Fly
local FlyEnabled = false
local FlySpeed = 50
local FlyConn, FlyBV = nil, nil

local function startFly()
   if FlyConn then FlyConn:Disconnect() FlyConn = nil end
   local hrp = safeHRP()
   if not hrp then return end
   if not FlyBV or not FlyBV.Parent then
      FlyBV = Instance.new("BodyVelocity")
      FlyBV.Name = "RayfieldFlyBV"
      FlyBV.MaxForce = Vector3.new(1e5,1e5,1e5)
      FlyBV.Velocity = Vector3.zero
      FlyBV.Parent = hrp
   else
      FlyBV.Parent = hrp
   end
   FlyConn = RunService.RenderStepped:Connect(function()
      if not FlyEnabled then return end
      local hrp2 = safeHRP()
      if not hrp2 then return end
      local cam = workspace.CurrentCamera
      local dir = Vector3.zero
      if UserInputService:IsKeyDown(Enum.KeyCode.W) then dir += cam.CFrame.LookVector end
      if UserInputService:IsKeyDown(Enum.KeyCode.S) then dir -= cam.CFrame.LookVector end
      if UserInputService:IsKeyDown(Enum.KeyCode.A) then dir -= cam.CFrame.RightVector end
      if UserInputService:IsKeyDown(Enum.KeyCode.D) then dir += cam.CFrame.RightVector end
      if UserInputService:IsKeyDown(Enum.KeyCode.Space) then dir += Vector3.new(0,1,0) end
      if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then dir -= Vector3.new(0,1,0) end
      if dir.Magnitude > 0 then
         FlyBV.Velocity = dir.Unit * FlySpeed
      else
         FlyBV.Velocity = Vector3.zero
      end
   end)
end

PlayerTab:CreateToggle({
   Name = "Fly Mode",
   CurrentValue = false,
   Callback = function(v)
      FlyEnabled = v
      if FlyEnabled then startFly() else if FlyConn then FlyConn:Disconnect(); FlyConn=nil end; if FlyBV and FlyBV.Parent then FlyBV:Destroy(); FlyBV=nil end end
   end,
})

PlayerTab:CreateSlider({
   Name = "Fly Speed",
   Range = {10, 500},
   Increment = 1,
   CurrentValue = FlySpeed,
   Suffix = "speed",
   Callback = function(v) FlySpeed = v end,
})

-- Noclip
local NoclipEnabled = false
local NoclipConn = nil
PlayerTab:CreateToggle({
   Name = "Noclip",
   CurrentValue = false,
   Callback = function(v)
      NoclipEnabled = v
      if NoclipEnabled and not NoclipConn then
         NoclipConn = RunService.Stepped:Connect(function()
            local char = LocalPlayer.Character
            if not char then return end
            for _, part in ipairs(char:GetDescendants()) do
               if part and part:IsA("BasePart") then pcall(function() part.CanCollide = false end) end
            end
         end)
      elseif not NoclipEnabled and NoclipConn then
         NoclipConn:Disconnect(); NoclipConn=nil
         local char = LocalPlayer.Character
         if char then for _, part in ipairs(char:GetDescendants()) do if part and part:IsA("BasePart") then pcall(function() part.CanCollide = true end) end end end
      end
   end,
})

PlayerTab:CreateButton({
   Name = "Reset Speed & Jump",
   Callback = function()
      local h = safeHumanoid()
      if h then pcall(function() h.WalkSpeed = 16; h.UseJumpPower = true; h.JumpPower = 50; h.JumpHeight = 50/7 end) end
      SavedWalk = 16; SavedJump = 50
      WalkSlider:Set(16); JumpSlider:Set(50)
   end,
})

-- Auto reapply on respawn
LocalPlayer.CharacterAdded:Connect(function()
   task.wait(0.5)
   local h = safeHumanoid()
   if h then pcall(function() h.WalkSpeed = SavedWalk; h.UseJumpPower = true; h.JumpPower = SavedJump; h.JumpHeight = SavedJump/7 end) end
   if FlyEnabled then startFly() end
end)

----------------------------------------------------------------
-- TELEPORT TAB
----------------------------------------------------------------

-- Player dropdown (stable)
local SelectedPlayer = nil
local initialPlayers = getPlayerNameList()
local PlayerDropdown = TeleportTab:CreateDropdown({
   Name = "Select Player",
   Options = initialPlayers,
   CurrentOption = {initialPlayers[1]},
   MultipleOptions = false,
   Callback = function(opt)
      if typeof(opt) == "table" then opt = opt[1] end
      SelectedPlayer = (opt ~= "No Players") and opt or nil
   end,
})

local function refreshPlayerDropdown()
   local opts = getPlayerNameList()
   PlayerDropdown:Refresh(opts, true)
   if opts[1] then PlayerDropdown:Set({opts[1]}) end
   SelectedPlayer = (opts[1] ~= "No Players") and opts[1] or nil
end
Players.PlayerAdded:Connect(refreshPlayerDropdown)
Players.PlayerRemoving:Connect(refreshPlayerDropdown)

TeleportTab:CreateButton({
   Name = "Teleport to Player",
   Callback = function()
      if not SelectedPlayer then Rayfield:Notify("Teleport", "Pilih player dulu.", 4); return end
      local target = Players:FindFirstChild(SelectedPlayer)
      local hrp = safeHRP()
      if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and hrp then
         pcall(function() hrp.CFrame = target.Character.HumanoidRootPart.CFrame + Vector3.new(0,5,0) end)
      else
         Rayfield:Notify("Teleport", "Target/HRP tidak tersedia.", 4)
      end
   end,
})

-- Teleport pos
local PosList = {
   ["Pos 1"] = Vector3.new(5,12,-404), ["Pos 2"] = Vector3.new(-184,128,408), ["Pos 3"] = Vector3.new(-166,229,652),
   ["Pos 4"] = Vector3.new(-38,406,616), ["Pos 5"] = Vector3.new(130,651,614), ["Pos 6"] = Vector3.new(-247,666,735),
   ["Pos 7"] = Vector3.new(-685,641,868), ["Pos 8"] = Vector3.new(-658,688,1458), ["Pos 9"] = Vector3.new(-507,903,1868),
   ["Pos 10"] = Vector3.new(59,950,2089), ["Pos 11"] = Vector3.new(52,981,2450), ["Pos 12"] = Vector3.new(72,1097,2456),
   ["Pos 13"] = Vector3.new(264,1270,2038), ["Pos 14"] = Vector3.new(-419,1302,2395), ["Pos 15"] = Vector3.new(-773,1314,2665),
   ["Pos 16"] = Vector3.new(-837,1475,2626), ["Pos 17"] = Vector3.new(-469,1465,2769), ["Pos 18"] = Vector3.new(-468,1537,2837),
   ["Pos 19"] = Vector3.new(-386,1640,2795), ["Pos 20"] = Vector3.new(-208,1666,2749), ["Pos 21"] = Vector3.new(-233,1742,2792),
   ["Pos 22"] = Vector3.new(-423,1740,2799), ["Pos 23"] = Vector3.new(-424,1713,3421), ["Pos 24"] = Vector3.new(71,1719,3428),
   ["Pos 25"] = Vector3.new(436,1720,3431), ["Pos 26"] = Vector3.new(625,1799,3433), ["Puncak"] = Vector3.new(781,2163,3921)
}
local orderedPosNames = {}
for i=1,26 do table.insert(orderedPosNames, ("Pos %d"):format(i)) end
table.insert(orderedPosNames, "Puncak")

local SelectedPos = orderedPosNames[1]
local PosDropdown = TeleportTab:CreateDropdown({
   Name = "Select Pos",
   Options = orderedPosNames,
   CurrentOption = {orderedPosNames[1]},
   MultipleOptions = false,
   Callback = function(opt) if typeof(opt)=="table" then opt=opt[1] end; SelectedPos = opt end,
})
TeleportTab:CreateButton({
   Name = "Teleport ke Pos",
   Callback = function()
      local vec = PosList[SelectedPos]
      local hrp = safeHRP()
      if vec and hrp then pcall(function() hrp.CFrame = CFrame.new(vec + Vector3.new(0,3,0)) end) else Rayfield:Notify("Teleport","Pilih pos dan pastikan HRP ada.",4) end
   end,
})

----------------------------------------------------------------
-- SERVER TAB
----------------------------------------------------------------
ServerTab:CreateButton({
   Name = "Rejoin Server",
   Callback = function() pcall(function() TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, LocalPlayer) end) end,
})

ServerTab:CreateButton({
   Name = "Server Hop",
   Callback = function()
      local ok, res = pcall(function()
         local url = ("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100"):format(game.PlaceId)
         local body = game:HttpGet(url)
         return HttpService:JSONDecode(body)
      end)
      if not ok or not res or not res.data then Rayfield:Notify("Server Hop","Gagal ambil daftar server.",5); return end
      local ids = {}
      for _, s in ipairs(res.data) do if s.id~=game.JobId and s.playing < s.maxPlayers then table.insert(ids,s.id) end end
      if #ids==0 then Rayfield:Notify("Server Hop","Tidak ada server lain.",5); return end
      local chosen = ids[math.random(1,#ids)]
      pcall(function() TeleportService:TeleportToPlaceInstance(game.PlaceId, chosen, LocalPlayer) end)
   end,
})

----------------------------------------------------------------
-- TROLL TAB (improved fling)
----------------------------------------------------------------

local auraEnabled = false
local auraRadius = 15
local flingStrength = 300
local flingCooldown = 0.8
local lastFling = {} -- per userId last fling time

-- UI
TrollTab:CreateSlider({
   Name = "Aura Fling Radius",
   Range = {5, 80},
   Increment = 1,
   CurrentValue = auraRadius,
   Suffix = "studs",
   Callback = function(v) auraRadius = v end,
})
TrollTab:CreateSlider({
   Name = "Fling Strength",
   Range = {50, 1500},
   Increment = 10,
   CurrentValue = flingStrength,
   Suffix = "power",
   Callback = function(v) flingStrength = v end,
})
TrollTab:CreateToggle({
   Name = "Aura Fling (HRP-burst)",
   CurrentValue = false,
   Callback = function(v) auraEnabled = v end,
})

-- Fling selected dropdown + loop + manual
local selectedFlingTarget = nil
local initNames = getPlayerNameList()
local FlingDropdown = TrollTab:CreateDropdown({
   Name = "Select Player to Fling",
   Options = initNames,
   CurrentOption = {initNames[1]},
   MultipleOptions = false,
   Callback = function(opt) if typeof(opt)=="table" then opt=opt[1] end; selectedFlingTarget = (opt~="No Players") and opt or nil end,
})
local function refreshFlingDropdown()
   local opts = getPlayerNameList()
   FlingDropdown:Refresh(opts, true)
   if opts[1] then FlingDropdown:Set({opts[1]}) end
   selectedFlingTarget = (opts[1] ~= "No Players") and opts[1] or nil
end
Players.PlayerAdded:Connect(refreshFlingDropdown)
Players.PlayerRemoving:Connect(refreshFlingDropdown)

local loopFling = false
TrollTab:CreateToggle({ Name = "Loop Fling Selected", CurrentValue = false, Callback = function(v) loopFling = v end })

TrollTab:CreateButton({
   Name = "Fling Selected Player (once)",
   Callback = function()
      if not selectedFlingTarget then Rayfield:Notify("Fling","Pilih target dulu",4); return end
      local target = Players:FindFirstChild(selectedFlingTarget)
      if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
         task.spawn(function() -- run attempt worker
            local tr = target.Character.HumanoidRootPart
            local hrp = safeHRP()
            local function safeMoveToBurst()
               pcall(function()
                  if hrp then
                     -- burst towards them
                     local dir = (tr.Position - hrp.Position)
                     if dir.Magnitude == 0 then dir = Vector3.new(0,1,0) end
                     hrp.Velocity = dir.Unit * (flingStrength*4)
                     hrp.RotVelocity = Vector3.new(0,50,0)
                     task.wait(0.08)
                     hrp.Velocity = Vector3.zero
                     hrp.RotVelocity = Vector3.zero
                  end
               end)
            end
            local function setTargetVelocity()
               pcall(function()
                  tr.AssemblyLinearVelocity = (tr.Position - (hrp and hrp.Position or tr.Position)).Unit * flingStrength + Vector3.new(0,200,0)
               end)
            end
            -- try sequence
            setTargetVelocity()
            task.wait(0.12)
            safeMoveToBurst()
            task.wait(0.12)
            setTargetVelocity()
         end)
      else
         Rayfield:Notify("Fling","Target tidak tersedia",4)
      end
   end,
})

-- Loop fling worker + Aura worker
RunService.Heartbeat:Connect(function()
   -- aura fling: try to burst toward every nearby player (with cooldown per-player)
   if auraEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
      local root = LocalPlayer.Character.HumanoidRootPart
      for _, plr in ipairs(Players:GetPlayers()) do
         if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local tr = plr.Character.HumanoidRootPart
            local dist = (tr.Position - root.Position).Magnitude
            if dist <= auraRadius then
               local now = os.clock()
               if (not lastFling[plr.UserId]) or (now - lastFling[plr.UserId] >= flingCooldown) then
                  lastFling[plr.UserId] = now
                  -- spawn the fling attempts so heartbeat loop is not blocked
                  task.spawn(function()
                     pcall(function()
                        -- 1) try assembly velocity on target
                        tr.AssemblyLinearVelocity = (tr.Position - root.Position).Unit * (flingStrength) + Vector3.new(0,200,0)
                     end)
                     task.wait(0.09)
                     -- 2) short burst of local HRP toward target
                     pcall(function()
                        if root then
                           local dir = (tr.Position - root.Position)
                           if dir.Magnitude == 0 then dir = Vector3.new(0,1,0) end
                           root.Velocity = dir.Unit * (flingStrength * 4)
                           root.RotVelocity = Vector3.new(0,50,0)
                           task.wait(0.08)
                           root.Velocity = Vector3.zero
                           root.RotVelocity = Vector3.zero
                        end
                     end)
                     task.wait(0.08)
                     -- 3) final assembly velocity attempt
                     pcall(function()
                        tr.AssemblyLinearVelocity = (tr.Position - root.Position).Unit * (flingStrength*1.2) + Vector3.new(0,200,0)
                     end)
                  end)
               end
            end
         end
      end
   end

   -- loop fling selected
   if loopFling and selectedFlingTarget then
      local tgt = Players:FindFirstChild(selectedFlingTarget)
      if tgt and tgt.Character and tgt.Character:FindFirstChild("HumanoidRootPart") then
         local tr = tgt.Character.HumanoidRootPart
         local hrp = safeHRP()
         pcall(function()
            if hrp then
               local dir = (tr.Position - hrp.Position)
               if dir.Magnitude == 0 then dir = Vector3.new(0,1,0) end
               tr.AssemblyLinearVelocity = dir.Unit * flingStrength + Vector3.new(0,200,0)
            else
               tr.AssemblyLinearVelocity = Vector3.new(0, flingStrength, 0)
            end
         end)
      end
   end
end)

-- refresh players lists for fling dropdowns
Players.PlayerAdded:Connect(function() refreshFlingDropdown(); refreshPlayerDropdown() end)
Players.PlayerRemoving:Connect(function() refreshFlingDropdown(); refreshPlayerDropdown() end)

-- final note: UI built
Rayfield:Notify("Ready", "Skrip sudah dimuat. Coba Aura Fling + Fling Selected.", 5)
